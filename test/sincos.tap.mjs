"uses strict";
import test from "tap";
const { abs, atan, cos, sin, sqrt, acos, atan2, pow, PI, min, max, ceil } =
	Math;

const check = [
	[0, 1.0, 0.0],
	[15, 0.9659258262890683, 0.25881904510252074],
	[30, 0.8660254037844387, 0.49999999999999994],
	[45, 0.7071067811865476, 0.7071067811865475],
	[60, 0.5000000000000001, 0.8660254037844386],
	[75, 0.25881904510252074, 0.9659258262890683],
	[90, 6.123233995736766e-17, 1.0],
	[105, -0.25881904510252085, 0.9659258262890683],
	[120, -0.4999999999999998, 0.8660254037844387],
	[135, -0.7071067811865475, 0.7071067811865476],
	[150, -0.8660254037844387, 0.49999999999999994],
	[165, -0.9659258262890682, 0.258819045102521],
	[180, -1.0, 1.2246467991473532e-16],
	[195, -0.9659258262890683, -0.2588190451025208],
	[210, -0.8660254037844386, -0.5000000000000001],
	[225, -0.7071067811865477, -0.7071067811865475],
	[240, -0.5000000000000004, -0.8660254037844384],
	[255, -0.25881904510252063, -0.9659258262890683],
	[270, -1.8369701987210297e-16, -1.0],
	[285, 0.2588190451025203, -0.9659258262890684],
	[300, 0.5000000000000001, -0.8660254037844386],
	[315, 0.7071067811865474, -0.7071067811865477],
	[330, 0.8660254037844384, -0.5000000000000004],
	[345, 0.9659258262890683, -0.2588190451025207],
	[360, 1.0, -2.4492935982947064e-16],
];

function cossin(θ) {
	switch (θ) {
		case 0:
			return [+1, +0];
		case 30:
			return [sqrt(3) / 2, 0.5];
		case 45:
			return [sqrt(2) / 2, sqrt(2) / 2];
		case 60:
			return [0.5, sqrt(3) / 2];
		case 90:
			return [+0, +1];
		case 120:
			return [-0.5, sqrt(3) / 2];
		case 135:
			return [-sqrt(2) / 2, sqrt(2) / 2];
		case 150:
			return [-sqrt(3) / 2, 0.5];
		case 180:
			return [-1, +0];
		case 210:
			return [-sqrt(3) / 2, -0.5];
		case 225:
			return [-sqrt(2) / 2, -sqrt(2) / 2];
		case 240:
			return [-0.5, -sqrt(3) / 2];
		case 270:
			return [-0, -1];
		case 300:
			return [0.5, -sqrt(3) / 2];
		case 315:
			return [sqrt(2) / 2, -sqrt(2) / 2];
		case 330:
			return [sqrt(3) / 2, -0.5];
		default:
			const r = (θ * PI) / 180;
			return [cos(r), sin(r)];
	}
}

test.test(`cossin`, function (t) {
	for (const [A, C, S] of check) {
		const [c, s] = cossin(A);
		t.ok(C != S && A != C, [A, C, S]);
		t.ok(abs(c - C) < 1e-7, [A, C, c]);
		t.ok(abs(s - S) < 1e-7, [A, S, s]);
	}
	t.end();
});

/*
from math import *
B = sorted(range(0, 370, 15))

def fix1(v):
	if abs(v[1]) < 0.0001:
		v[1] = 0

	if abs(v[2]) < 0.0001:
		v[2] = 0
	return v

[[a, cos(radians(a)), sin(radians(a))] for a in B]
map(fix1, [[a, round(cos(radians(a)), 4), round(sin(radians(a)), 4)] for a in sorted(A)])
sorted(map(fix1, [[a, cos(radians(a)), sin(radians(a))] for a in sorted(A)]))

*/
